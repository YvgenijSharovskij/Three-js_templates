function init(){scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3),renderer=new THREE.WebGLRenderer,document.body.appendChild(renderer.domElement),controls=new THREE.VRControls(camera),effect=new THREE.VREffect(renderer),effect.setSize(window.innerWidth,window.innerHeight),navigator.getVRDisplays().then(function(a){a.length>0&&(vrDisplay=a[0])})}function draw(){for(var a,b,c,d=0;d<numCubes;d++)a=new THREE.MeshNormalMaterial,b=new THREE.BoxGeometry(50,50,50),c=new THREE.Mesh(b,a),c.position.x=1e3*Math.random()-500,c.position.y=1e3*Math.random()-500,c.position.z=1e3*Math.random()-500,scene.add(c),cubes.push(c)}function onResize(){effect.setSize(window.innerWidth,window.innerHeight),camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix()}var camera,scene,renderer,effect,vrDisplay,controls,cubes=[],numCubes=100;init(),draw();var render=function(){requestAnimationFrame(render);for(var a=0;a<numCubes;a++)cubes[a].rotation.x+=.01,cubes[a].rotation.y+=.02;controls.update(),effect.render(scene,camera)};render(),document.querySelector("#VRConnect").addEventListener("click",function(){vrDisplay.requestPresent([{source:renderer.domElement}])}),window.addEventListener("vrdisplaypresentchange",onResize),window.addEventListener("resize",onResize);